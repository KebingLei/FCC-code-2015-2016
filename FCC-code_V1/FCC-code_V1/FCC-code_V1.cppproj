<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>6.2</ProjectVersion>
    <ToolchainName>com.Atmel.AVRGCC32.CPP</ToolchainName>
    <ProjectGuid>{85635de0-c23e-4587-b87e-f2b3aa02cbc4}</ProjectGuid>
    <avrdevice>AT32UC3C2512C</avrdevice>
    <avrdeviceseries>none</avrdeviceseries>
    <OutputType>StaticLibrary</OutputType>
    <Language>CPP</Language>
    <OutputFileName>lib$(MSBuildProjectName)</OutputFileName>
    <OutputFileExtension>.a</OutputFileExtension>
    <OutputDirectory>$(MSBuildProjectDirectory)\$(Configuration)</OutputDirectory>
    <AvrGccProjectExtensions>
    </AvrGccProjectExtensions>
    <AssemblyName>FCC-code_V1</AssemblyName>
    <Name>FCC-code_V1</Name>
    <RootNamespace>FCC-code_V1</RootNamespace>
    <ToolchainFlavour>Native</ToolchainFlavour>
    <KeepTimersRunning>true</KeepTimersRunning>
    <OverrideVtor>false</OverrideVtor>
    <CacheFlash>true</CacheFlash>
    <ProgFlashFromRam>true</ProgFlashFromRam>
    <RamSnippetAddress />
    <UncachedRange />
    <preserveEEPROM>true</preserveEEPROM>
    <OverrideVtorValue />
    <BootSegment>2</BootSegment>
    <eraseonlaunchrule>1</eraseonlaunchrule>
    <AsfFrameworkConfig>
      <framework-data xmlns="">
  <options />
  <configurations />
  <files />
  <documentation help="" />
  <offline-documentation help="" />
  <dependencies>
    <content-extension eid="atmel.asf" uuidref="Atmel.ASF" version="3.27.0" />
  </dependencies>
</framework-data>
    </AsfFrameworkConfig>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <ToolchainSettings>
      <Avr32GccCpp>
  <avr32gcc.common.outputfiles.hex>True</avr32gcc.common.outputfiles.hex>
  <avr32gcc.common.outputfiles.lss>True</avr32gcc.common.outputfiles.lss>
  <avr32gcc.common.outputfiles.eep>True</avr32gcc.common.outputfiles.eep>
  <avr32gcc.common.outputfiles.srec>True</avr32gcc.common.outputfiles.srec>
  <avr32gcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>NDEBUG</Value>
    </ListValues>
  </avr32gcc.compiler.symbols.DefSymbols>
  <avr32gcc.compiler.optimization.level>Optimize for size (-Os)</avr32gcc.compiler.optimization.level>
  <avr32gcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</avr32gcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <avr32gcc.compiler.optimization.UseAssemblerForPseudoInstructions>True</avr32gcc.compiler.optimization.UseAssemblerForPseudoInstructions>
  <avr32gcc.compiler.warnings.AllWarnings>True</avr32gcc.compiler.warnings.AllWarnings>
  <avr32gcccpp.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>NDEBUG</Value>
    </ListValues>
  </avr32gcccpp.compiler.symbols.DefSymbols>
  <avr32gcccpp.compiler.optimization.level>Optimize for size (-Os)</avr32gcccpp.compiler.optimization.level>
  <avr32gcccpp.compiler.optimization.PrepareFunctionsForGarbageCollection>True</avr32gcccpp.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <avr32gcccpp.compiler.optimization.UseAssemblerForPseudoInstructions>True</avr32gcccpp.compiler.optimization.UseAssemblerForPseudoInstructions>
  <avr32gcccpp.compiler.warnings.AllWarnings>True</avr32gcccpp.compiler.warnings.AllWarnings>
  <avr32gcccpp.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
    </ListValues>
  </avr32gcccpp.linker.libraries.Libraries>
  <avr32gcccpp.linker.optimization.GarbageCollectUnusedSections>True</avr32gcccpp.linker.optimization.GarbageCollectUnusedSections>
  <avr32gcccpp.linker.optimization.PutReadOnlyDataInWritableDataSection>True</avr32gcccpp.linker.optimization.PutReadOnlyDataInWritableDataSection>
  <avr32gcccpp.linker.optimization.AllowDirectReferencesToDataSection>True</avr32gcccpp.linker.optimization.AllowDirectReferencesToDataSection>
</Avr32GccCpp>
    </ToolchainSettings>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <ToolchainSettings>
      <Avr32GccCpp>
  <avr32gcc.common.outputfiles.hex>True</avr32gcc.common.outputfiles.hex>
  <avr32gcc.common.outputfiles.lss>True</avr32gcc.common.outputfiles.lss>
  <avr32gcc.common.outputfiles.eep>True</avr32gcc.common.outputfiles.eep>
  <avr32gcc.common.outputfiles.srec>True</avr32gcc.common.outputfiles.srec>
  <avr32gcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>DEBUG</Value>
    </ListValues>
  </avr32gcc.compiler.symbols.DefSymbols>
  <avr32gcc.compiler.optimization.level>Optimize (-O1)</avr32gcc.compiler.optimization.level>
  <avr32gcc.compiler.optimization.PrepareFunctionsForGarbageCollection>True</avr32gcc.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <avr32gcc.compiler.optimization.UseAssemblerForPseudoInstructions>True</avr32gcc.compiler.optimization.UseAssemblerForPseudoInstructions>
  <avr32gcc.compiler.optimization.DebugLevel>Maximum (-g3)</avr32gcc.compiler.optimization.DebugLevel>
  <avr32gcc.compiler.warnings.AllWarnings>True</avr32gcc.compiler.warnings.AllWarnings>
  <avr32gcccpp.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>DEBUG</Value>
    </ListValues>
  </avr32gcccpp.compiler.symbols.DefSymbols>
  <avr32gcccpp.compiler.optimization.level>Optimize (-O1)</avr32gcccpp.compiler.optimization.level>
  <avr32gcccpp.compiler.optimization.PrepareFunctionsForGarbageCollection>True</avr32gcccpp.compiler.optimization.PrepareFunctionsForGarbageCollection>
  <avr32gcccpp.compiler.optimization.UseAssemblerForPseudoInstructions>True</avr32gcccpp.compiler.optimization.UseAssemblerForPseudoInstructions>
  <avr32gcccpp.compiler.optimization.DebugLevel>Maximum (-g3)</avr32gcccpp.compiler.optimization.DebugLevel>
  <avr32gcccpp.compiler.warnings.AllWarnings>True</avr32gcccpp.compiler.warnings.AllWarnings>
  <avr32gcccpp.linker.libraries.Libraries>
    <ListValues>
      <Value>libm</Value>
    </ListValues>
  </avr32gcccpp.linker.libraries.Libraries>
  <avr32gcccpp.linker.optimization.GarbageCollectUnusedSections>True</avr32gcccpp.linker.optimization.GarbageCollectUnusedSections>
  <avr32gcccpp.linker.optimization.PutReadOnlyDataInWritableDataSection>True</avr32gcccpp.linker.optimization.PutReadOnlyDataInWritableDataSection>
  <avr32gcccpp.linker.optimization.AllowDirectReferencesToDataSection>True</avr32gcccpp.linker.optimization.AllowDirectReferencesToDataSection>
  <avr32gcccpp.assembler.debugging.DebugLevel>Default (-g)</avr32gcccpp.assembler.debugging.DebugLevel>
  <avr32gcccpp.preprocessingassembler.debugging.DebugLevel>Default (-Wa,-g)</avr32gcccpp.preprocessingassembler.debugging.DebugLevel>
</Avr32GccCpp>
    </ToolchainSettings>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="ASCII_defs.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="CLKconfig.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="CLKconfig.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="FCC-code_V1.cpp">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="FuelCell_Inputs.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="FuelCell_Inputs.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myADC.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myADC.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myPWM.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myPWM.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="mySerial.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="mySerial.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myTIMER.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="myTIMER.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="Output_defs.h">
      <SubType>compile</SubType>
    </Compile>
  </ItemGroup>
  <Import Project="$(AVRSTUDIO_EXE_PATH)\\Vs\\Compiler.targets" />
</Project>